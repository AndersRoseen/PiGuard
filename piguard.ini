[general]
#sampling interval in seconds
data_sampling_interval = 2

[actions]
#actions to be performed every predefined interval of time
#list here all the actions in the form  <actionName>:<interval in minutes> separated by a comma
on_demand_actions = saveStatus:30,performBackup:240

[gpio]
#Decide to use BCM GPIO references or physical pin numbers
#avalilable values are BCM and PHY
mode = BCM

[storage]
statuses_location = /home/pi/Documents/PiGuardData/
images_location = /home/pi/Pictures/PiGuard/
time_window = 3

[auth]
#list here all the credentials you want to enable
#the format must be a list of username:password separated by a comma
credentials = username:password

[sensors]
#list of sensors to use comma separated
#current available sensors are: picamera, sensehat, pit, dht, bmp, mqair
sensors_list = picamera,sensehat,pir,dht,bmp,mqair

[picamera]
#sensor's aspect ration is 4:3 and maximum resolution is 2592x1944
resolution = 640x480
#rotation expressed in degrees
rotation = 0

[sensehat]
#available sensors comma separated
#values are: temperature,humidity,pressure
active_sensors = pressure

[pir]
#the GPIO pint to which the PIR sensor is connected
#depending on the GPIO mode this could be either the BCM number or the physical one
gpio_pin = 26

[dht]
#models are AM2302, DHT22 and DHT11
model = AM2302
#available sensors comma separated
#values are: temperature,humidity
active_sensors = temperature,humidity
#the number of the BCM pin to which the sensor is connected
gpio_pin = 17

[bmp]
#available sensors comma separated
#values are: pressure,temperature
active_sensors = pressure

[mq135]
#the voltage value of the sensor when exposed to open air
calibration_voltage = 0.405
#the port of the adc converter to which the sensor is connected
adc_port = 0
#the load resistance in ohm connected to the mq135 sensor
r_load = 4700.0

[rest_service]
server_certificate_location = /home/pi/Documents/Certificates/PiGuardServerCertificate.cer
server_key_location = /home/pi/Documents/Certificates/PiGuardServerKey.key

[backup]
#location where to upload data, at the moment only dropbox is available
#if no location is provided do backup is performed
location = dropbox
#for how many days you want to keep the data
time_window = 4

[dropbox]
#this is just for the development phase, in the final version will be replaced by dropbox's credentials
app_key = the_app_key
app_secret = the_app_secret
#this field will be automatically filled by the app
login_token =

[mail]
user_id = the_smtp_user_name
pass = the_smtp_password
smtp_server = smtp.gmail.com
smtp_port = 587
to = recipient_email_for_the_alerts
from = sender_email